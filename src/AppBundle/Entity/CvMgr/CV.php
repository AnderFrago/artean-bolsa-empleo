<?php
/**
 * @title Curriculum Vitae
 * @author AnderEÃ±o (ander_frago@cuatrovientos.org)
 * @see FormedStudent can have multiple CVs.
 * However, at application level it will be implemented just one.
 */

namespace AppBundle\Entity\CvMgr;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * @ORM\Table(name="cv")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\CvMgr\CVsRepository")
 */
class CV {

  public function __construct() {
    $this->workexperiences = new ArrayCollection();
    $this->studies = new ArrayCollection();
    $this->otherknowledges = new ArrayCollection();
    $this->languages = new ArrayCollection();
    $this->offers_has_cvs = new ArrayCollection();
  }

  /**
   * @ORM\Column(name="id", type="integer")
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="AUTO")
   */
  private $id;

  /**
   * @ORM\OneToMany(targetEntity="WorkExperiences", mappedBy="cv")
   */
  private $workexperiences;

  /**
   * @ORM\OneToMany(targetEntity="Studies", mappedBy="cv")
   */
  private $studies;

  /**
   * @ORM\OneToMany(targetEntity="Otherknowledge", mappedBy="cv")
   */
  private $otherknowledges;


  /**
   * @ORM\OneToMany(targetEntity="Languages", mappedBy="cv")
   */
  private $languages;


  /**
   * @see Autogenerated Getters & Setters
   */

  public function getId(): int {
    return $this->id;
  }

  public function setId(int $id) {
    $this->id = $id;
  }

  public function getWorkexperiences() {
    return $this->workexperiences->getValues();
  }

  public function getWorkexperienceByIndex($index){
    $wrkexp_tmp_array =  $this->workexperiences->getValues();
    return $wrkexp_tmp_array[$index];
  }

  public function setWorkexperiences($workexperiences) {
    $this->workexperiences = $workexperiences;
  }

  public function getStudies() {
    return $this->studies->getValues();
  }

  public function setStudies($studies) {
    $this->studies = $studies;
  }

  public function getOtherknowledges() {
    return $this->otherknowledges->getValues();
  }

  public function setOtherknowledges($otherknowledges) {
    $this->otherknowledges = $otherknowledges;
  }

  public function getLanguages() {
    return $this->languages->getValues();
  }

  public function setLanguages($languages) {
    $this->languages = $languages;
  }

  /**
   * @description Methods to add elements to the arrays
   */
  public function addWorkexperience($workexperience) {
    $this->workexperiences->add($workexperience);
  }

  public function addStudies($studies) {
    $this->studies->add($studies);
  }

  public function addLanguages($languages) {
    $this->languages->add($languages);
  }

  public function addOtherknowledges($otherknowledge) {
    $this->otherknowledges->add($otherknowledge);
  }

  /**
   * @ORM\ManyToOne(targetEntity="AppBundle\Entity\UserMgr\FormerStudents", inversedBy="cvs", cascade={"persist"})
   * @ORM\JoinColumn(name="formerstudent_id", referencedColumnName="id")
   */
  private $formerstudent;

  public function getFormerstudent() {
    return $this->formerstudent;
  }

  public function setFormerstudent($formerstudent) {
    $this->formerstudent = $formerstudent;
  }

  /**
   * @ORM\OneToMany(targetEntity="AppBundle\Entity\OfferMgr\Offers_has_CVs", mappedBy="cv")
   */
  private $offers_has_cvs;

  public function getOffersHasCVs() {
    return $this->offers_has_cvs;
  }

  public function setOffersHasCVs($offers_has_cvs) {
    $this->offers_has_cvs = $offers_has_cvs;
  }

}